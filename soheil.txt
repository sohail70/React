node js ro nasb kun ta command npx nasb beshe
npx create-react-app hello -->https://reactjs.org/docs/faq-structure.html   
age error dad npm config delete proxy ro bezan
faghat filehaye toye source processed mishan tavasote webpack --> vase sor@t
----------------

khoroji in bood:
Success! Created hello at /home/sohail/React/hello
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd hello
  npm start

Happy hacking!





--------------
npm vase run kardane project hast




dar src index.js ma kar mikunim  --> rendering the app.js file ----> some poeple delete one of those but we keep that ---> so out entire app is gonna built in app.js
dar public ham index.html hast --> we don't have to touch that --> java script poresh mikune badan
app.js ha important hast 
<App /> is the top component in the hierarchy
everybody will build in App.js but you can do it in index.js too

file haye logo dar public ro pak kun niazi nadarim
dar src ham dar App.css kulan pak kun

AppTest.js va index.css ro ham pak kun

hala ke ina ro pak kardi bayad jaee ke az ina dare use mishe ham pak beshe vase inke sari befahmi 
dar terminal npm start ro bezan ta error haro bebini
deghat kun cd karder bashi be folder e hello

pas dar App.js import e marbot be logo ro pak kun
dar index.js 
import reportWebVitals from './reportWebVitals';


oon paeen ham reportWebVitals rocall kardim va comment haye balash ro hazf kun

line 7 app.js ham logo ro neveshte tag ro pak kun

index.css ro ham az index.js pak kun


----------------------------------------------------------------------------

localhost:3000 ---> we are developing locally ---> npm run build ro bezani mikhay bebari to internet yani --> build dir dorost mikune va inaro to aws3  upload mikunu

age mikhay inaro ham locally check kuni mituni benvi ---> serve -s build --> to serve it on local host as well

npm run start --> loacl developing ---> any changes will be immediately shown to browser
npm build --->
serve command to test it


dobare npm run start ro bezan ta bargardi be development

taghir bedi build file taghir nemikune balke bayad har bar npm build ro bezani AGAIN

dar packages.json mitoni dependencies age dari be pack haye dg bezari

npm install ro bezan ---> dar package dep haee ke neveshti ro install mikune


package-lock .json exact version use shode dar in app ro neshoon mide ta baghie bebinan ---> yani masala ^13.4.0 in yani had aghal version 13.4 bahse
npm install ro bezani regenerate mikune package-lock.json ro

in pack haro dar source control nakun ---> dar node_modules hame chi oonja nasb hast ---> ino ham mishe generate kar 
pakesh kun va bad npm install bezani hame dobare nasb mishe! ---> vase hamin chun mitone generate beshe dar source control (git ) nemizarimesh

manifest.json ro ham daresh logo haro pak kun

dar .gitignore har chi benvisi ignore mishe 
masalan /build ignore mishe chun generetae mishan rahat
ya masalan /node_modules



manifest.json --> mobile icon --> update bashe in file vase production
robots.txt --> how differnet websracpers should treat this for bots and search engine that is.

------------------------------------------------------------------------------------
everything in react is desinged as a comp
component ---> reusable code to use all over our app
component shabih func hastan --> faghat html return mikunan ---> dar vaghe hamoon jsx barmigardonan ---> fek kun hamoon html hast
jsx dar vaghe syntax extesnion to js hast ---> templatizing h1 using variable  az ghabelyat hash hast
kholase: ---> html+javasript ---> eval to html


avalin component ma Employee hast ke ye folder ijad kardim be esme component va bad dar app.js import kardim va dar return tag esh ro neveshtim

compoent ha functionality ro daran  --> each comp is self sustained  --> comp nesting ham okay hast chun dar comp e App omadim comp e Employee ro neveshtim 
dar app.js mitoni ham jsx (html) benvisi ham logic faghat bayad toye {} bezarish


------------------------------------------------------------------------------------
-props: --> important
how to pass data from parent to child component ---> from App to Employee masalan
kholase ba props --> you can pass specific values for different variables ---> masalan Employee Soheil
age mikhay chandta chiz ro return kuni dar return --> masalan dar return e employee --> az () ghable return use kun 
va deghat kun az <> </> yani fragemment aval va akhar code use kuni yani hmae chi ro bendazi to in chun bayad ye single element return beshe 
semicolon ro ham bardar

deghat kun return age statement badesh to chnadta line bod yani multiple line khati benvisi bayad () bezari vagarna niazi nist

props are not meant to be changed in child copmponet
-------------------------------------------------------------------------------------
state:
vase taghire props dar parent 
import kardim useState ro dar App.js va ba setRole state ijad kardim --> state ijad kardim chun var be UI vasl nist vali state vasle va vorodi input ee ke gereftim ro set kardim be role e Abby 

------------------------------
useState is an example of a hook --> there are other hooks to introduce functionality into our component very easily
hooks alow to use feature without class ---> we prefer to use functions with hooks 



------------------------------
Tailwind Css ro azash mikhaym use kunim --> google search kun : tailwind css installation react

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

and then add the path --> just follow the website ---> ye file tailwind.config.js ijad shode barat ke boro tosh va inaro onja copy kun jaye oon chizi ke hast:

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}




code bala dar content faghat miad kule js file haye toye src ro migire hamin


hala in 3 khat ro copy kun dar App.css ya index.css .ke miad tamame tailwind styling ha ro neshoon mide
chun ma index.css ro pak kardim mizarimesh to App.css

hala npm run start ro kezadi  badesh mituni dar App.js et be in sabk style ezafe kuni:

export default function App() {
  return (
    <h1 className="text-3xl font-bold underline">
      Hello world!
    </h1>
  )
}



kholase:
install - initialize -tell where your js files are - add tailwind directive to your css 


alan masalan bor o dar App.js ye chizi be div e className="App  (inja ezafe mishe)"  ezaf kun

masalan <div className="App bg-red-300">
-----------------------------------
we don't need app component specific styling so change the name of App.css and index.css ---> dar App.js ham import ro dorst kun


---------------------------------
tailwind css omade core css roles ro gerefte va ba class jaygozinesh karde --> dar doc eshon dar search benvis background color ---> ye seri class mibini ke properties ro mitoni be different element vasl kuni --> hala ma khode properties ro nemidim balke class ro midim
ya margin ro search kun bebin ya display
masalan margin-top: 0px;  mishe mt-0
ya flex ro search kun


hala age npm run build ro bezani ina tabdil mishe be code haye css asli shon --> dar main---.css bebin


------------------------------------
use some tailwind examples
dar Employee.js bala ro comment kun va Example 2 benvis
dar docs ---> utility first fundamentals

in code ro dar Employee bezar:

<div class="py-8 px-8 max-w-sm mx-auto bg-white rounded-xl shadow-lg space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6">
  <img class="block mx-auto h-24 rounded-full sm:mx-0 sm:shrink-0" src="/img/erin-lindford.jpg" alt="Woman's Face">
  <div class="text-center space-y-2 sm:text-left">
    <div class="space-y-0.5">
      <p class="text-lg text-black font-semibold">
        Erin Lindford
      </p>
      <p class="text-slate-500 font-medium">
        Product Engineer
      </p>
    </div>
    <button class="px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2">Message</button>
  </div>
</div>



zemnan code bala ye irad dare chun image bayad self closing bashe ke ina yadeshon raft vali to dar enteha bezar: />




mikhaym vaghti employee ha ziad shodan warp beshe o ina ---> pas Employee haro bendaz to div dar App.js va flex kun
so if there is not enough room it makes them change appropiately


injoori:
          <div className='flex flex-wrap'>
            <Employee name="zart" role="intern"></Employee> 
            <Employee name="abby" role={role}/>  
            <Employee name="sam"/>
          </div>


alan age zoom bokuni taghir ro mibini

flex Layout ro search kun dar doc tailwind



be Employee ye m-2 ham ezaf kun ta margin ezafe beshe
auto margin e mx-auto ro ham hazf kun


attribute img ro ba link bezar va bad dar Employee.js ham karhaye lazem ro baraye use kardan az img anjam bede

vase circle kardan aks ha harchand ham ke rectangle img bashan dar Employee dar tag e img inaro ezaf kun:  object-cover rounded-full h-[100px] w-[100px]


-------------------- 
ta lan aks gozashtim

how to work with arrays or list of data (slightly different data)
so use a loop and the data comes from an array
datas are coming from the states but it could easily be substitued out to come from an API --> pas ba inke alan hard code mikunim vali badan ok mishe

step1 --> take all the data and move it to the top in a single var
step2 --> use loop --> use map



az employees.map() use mikunim ---> ye func roye array hast ke ejaze mide roye array iterate kunim



ye warning e mide --> react-jsx-dev-runtime.development.js:87 Warning: Each child in a list should have a unique "key" prop.
react keeps track of all the data on the page va react mifahme ke chiu mikhay update kuni age barash id bezari. id vase identify kardan each element in the array hast 
pas id khoobe ke age update esh kardi majboor nashi kole page ro update kuni pas behtare vase employee dar App.js ye attribute e key bezari
pas masalan key={employee.id}  ro bezar kenare name dar Employee in App.js var dar bala ham vase har karmand ye id bezar masalan 1 va 2 va 3 va ...
vali khoob ye ravesh behtar hast be esme guid --> globally unique identifier
npm install uuid --> universally unique id ke hamon guid hast\

bad ino jaye key bala benvis: key={uuidv4()} 
import ham yadet nare --> import {v4 as uuid4} from 'uuid';


har bar ke benvisi ye id behet mide
console.log(uuidv4());


-------------------------------------------------------------------------------------------
creating modal ---> pop up window ijad ---> edit ---> it won't change the original data until you hit update or complete or what every

don't create it from scratch ---> use react bootstrap --> it gives us component --> one of them is a modal

mishe ino to khode Emplyee.js dorost kard ya comp jadid ijad kuni ke manage kuni bakhshe modal chizha ro kulan

1) create modal from react bootstrap
2) styling and submitting with a button
3) passing props from Employe to modal component that will auto fill the user data into that modal
4) hitting the update button and having that data changed

in 4 marhale ro be moror anjam midim

ino dar google search kun --> https://react-bootstrap.github.io/getting-started/introduction/ 




 npm install react-bootstrap bootstrap
 ino ham dar index.js bezar (index.js outer most javascrippt file hast) --->import 'bootstrap/dist/css/bootstrap.min.css';


dar compoent folder EditEmployee.js ro dorost kun

va bad https://react-bootstrap.github.io/components/modal/

az static_backdrop use mikunim ta vaghti kharej click kardim kharej nashe! ---> ghemate render akhare khat ro nagir --> paste kun to EditEmployee


alan age deghat kuni khode in modal ye button misaze vali Employee comp ma ham khodesh ye button dare
hala boro dar Employee.js <EditEmployee /> ro bezar oon vasat

ama benazarm behtare hamoon button e ke dar Employee.js hast ro cut kuni bezari to modal dar EditEmployee.js faghat yade bashe onClick esh ro ezafe kuni ke click behse --> mitoni az button ghabli dar modal negah kuni
nokte: <Button> </Button> is a custom bootstrap component hast va <button> vase html hast ke ma az html e use mikunim ke farghi nadare



-----------------
create a form inside that modal an useing tailwind to style it

search in google forms in tailwind css --> https://v1.tailwindcss.com/components/forms


ino to model body ezafe kun --> hamsho ham nagerefrim ye meghdarisho gereftim az site e bala ---> zeman /> ro dar input bezar chun yadesh rafte bezare to site


                <form class="w-full max-w-sm">
                    <div class="md:flex md:items-center mb-6">
                        <div class="md:w-1/3">
                        <label class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4" for="name">
                            Full Name
                        </label>
                        </div>
                        <div class="md:w-2/3">
                        <input class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500" id="name" type="text" value="Jane Doe"/>
                        </div>
                    </div>
                
                    <div class="md:flex md:items-center">
                        <div class="md:w-1/3"></div>
                        <div class="md:w-2/3">
                        <button class="shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded" type="button">
                            Sign Up
                        </button>
                        </div>
                    </div>
                </form>



jaye class ham bezar className chun react warning mide vali goya az ye version 16 be bad nabayd error bede vali bara man mide --> serach kardam mige convetion react hast in
jaye for ham fekkunam htmlfor bayad bezari


hala Full name e ke ninput migire ro byad bedi be onvan role e on Exmployee



on div e marbot be Full name ro copy kun va vase Role ham ijad kun

jaye singUp button ro ba buttun blue e avaz kun
yani sign up ro div esh ro kulan pak kun ---> hala button html e bezar ke ghablan dashtim --> ama chejoori html button ro be form associate kunim? motmaen nistam ke bootstrap button yani <Button> in ghabelyato dare ya na!
pas benvis <button form="id-tag-e-form-ro-inja-bezar>  age tag e formet ham id nadare behesh bede ye id


kholase dar EditEmployee.js dar modal footer button khodesho pak kun va ino bezar
<button form='editModal' className=''>Update</button>
className ro ham ba tailwind css por kun --> az doc esh begard nemone copy kun  ---> https://v1.tailwindcss.com/components/buttons

alan dar site agar update kuni site referesh mishe kulesh ta beroz beshe albate hano chizi set nemishe

vase inke size ha consistent bashan hamoon buttun jadid html e to copy kun va buttun close se bootstrap ro pak kun va jash az copy shode Update use kun ta size ha yeksan beshan



ta alan kuli error dar console dari
Warning: You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.
ke yani toye box nemitooni type kuni --> readonly shode va mige deafult value bezaresh yani value ro bokun deafultValue --> onjaee ke neveshte value="JaneDoe" ro bokon defaultValue

aval hamishe bayad az value use kuni  va kenaresh onChange={} event handler bezari vase update shodanseh --> dar EditEmployee.js

value ham bayad injori bahse value={props.name} va dar paeen value={props.role} bayad bashe va dar App.js dar tag e EditEmployee attribute name va role ro por kuni --> props ro ham be onvane input be function e EditEmployee bede
in mishe pass kardan value az Employee.js be EditEmployee.js ---> passing down data

next step --> store the new name and role



kholase in do khat ro dar EditEmployee.js mizarim
    const [name, setName] = useState(props.name); 
    const [role, setRole] = useState(props.role);

    va vlaue={name}
    va value={role} ham oon paeen mizari1


hala mitunim onChange ro bezarim ta in state ro update kunim --> bezar kenar value

onChange ham injoorie ---> onChange={(e)=>{setName(e.target.value)}}  ---> ke ye arrow func hast ke e vorodi dare va harchi varedesh beshe ro mde be setName vase taghire state

hala mitoni to form benvisi 
kholase --> ye state var tarif kardim - load the default value az props kardim va form ro taghir dadi va keep track kardim most recent change ro


-----------------------------------
Finishing modals:

update the data showing in the main page
for a single page application we wanna avoid any page refresh whenever we can and we want the data to be updated dynamically changed in state --> ama alan bade zadan update refresh mishe
hala chejoori data e ke dar state e name va role dar EditEmployee.js store kardim ro bahash berim data mojod dar App.js ro bahash beroz kunim yani state e employees ro chejoori bero kunim?
bayad be structure deghat kuni :
alan App.js darim ke tosh Employee hast va toye Employee , EditEmployee hast ke button dare va form
dobare yad avari mikunim ke props nabayad change beshse tavasote component even in the modal component --> vase hamin state dorost kardim  ---> engari mesle copy hast dg yani pointer ee nist
pas chejoori az child props e parent ro avaz kunim --> bayad callback func pass kunim ta stat e original component ro taghir bedim

kholase dar App.js function updateEmployee ro ezafe kun
tag e Employee ro ham on func ro bezar ke pass down kune be Employee va hala dar Employee.js ham pass down kun be EditEdmployee
dar enteha ham boro dar EditEmployee va vase Update button onClick bezar ya ye kar behtar kun --> vase tag e form onSubmit bezar ke ye arrow func hast
data e form ro ham be onvan vorodi midim be arrow function --> masalan e ro be onvane vorodi midim ke data e form ro begire
e.preventDeafult ---> in prevent page refresh mikune


props.updateEmployee(props.id,name,role); miad berooz mikune ama id chie ? bayad dar App.js vase employee hat id bezari to easily identify them masalan addad bezar id:1 va 2 va ..
hala ke khodet id gozashti dg niazi be guid nist age khasti hazfesh kun

kholase in khat ro ezafe kun id={employee.id} va dar Employee.js ham haminkaro bokon monteha props. ghablesh yade nare

hala age dar site esm ro avaz kuni in be App.js mirese!
loop thourhg kun dar App.js ta id morede nazar ro peyda kuni va update kuni
kholase func e function updateEmployee(id,newName , newRole) dar App.js ro check kun



-----------------------------------------------
How to add employee?

mesle bala --> faghat dg niazi nist az Employee begzarim yani az App.js function pass kun mostaghim be AddEmployee.js


-----------------------------------------------
new approach --> hamoon kare ghabli ke anjam dadim ro mikhay jore dg anjam bedim? jaye inke pass function kunim mikhaym pass component down kunim as a property az parent be child

this is 3 layers nested:
App --> EMployee --> EditEmployee  

age layer ha nested ziad bood behtare component befresti jaye property


EditEmployee ro pass kun be Employee dar  App.js
const editEmployee = <EditEmployee id=.. name...  role.. updateEmployee.. /> ro benvis


-------------------------------------------
placing a navigation bar at the top using tailwind ---> use existing code --> tailwind nav bar ro serach kun dar google  -->https://tailwindui.com/components/application-ui/navigation/navbars
tailwind UI is a payed thing --> pay to get some prebuild component that work really well
tailwind UI ro baz kun avali pooli nist begiresh
oon bala html ro tabdil kun be react ke dg niazi nabashe class ro be className tabdil kuni 3 sa@t :)
inaro cop bezan bezar to Header.js
esme func ro az example be Header taghir bede va ayazan hamonja export karder ke dg niazi nist oon paeen export kuni

hala bezaresh to App.js bezar balaye employee ha --> header bayad bala bashe dg
import ham bokonesh
error mide chun ye seri module nadare --> ba npm nasb kun --> @headlessui/react for react va @heroicons/react for react ro nadare
pas benvis npm install @headlessui/react 
va npm install @heroicons/react



age dar kul ba in hal nemikuni az tailwind css Header ye seri example hast negah kun --> ona drop down ham dare taze -->https://tailwindui.com/components/marketing/elements/headers
dar Header.js no-underline bezar vase item ha va img ha ro ba ctrl+click check kun va pak kun --> kulan section do ta img bala ro pak kun aslan mnemikhaymeshoon

rasti oon input ro ke ghadim gozashte bodi ro ham hazf kun

zeman dar App.js ino gozashtim
  <div className="App bg-gray-300 min-h-screen">

oon min-h-screen ro nazari faghat ye ghesmati ro gray mikune
-------------
dealing with pages --> pages vs component
and second we wanna talk about navigation and routing inside of react --> yani active kardan linkhaye navbar --> to switch pages

dar src --> folder dorost kun be emse pages --> ye file ijad kun be esme Employees.js va info haye toye App.js ro bezar oonja
mitooni kule App.js ro berizi in to va taghirat bedi:
jaye import './index.css'; bezar import '../index.css'; chun alan ye folder up shode
esme func ro az App bokon Employees va export e paeen ro dorost kun

dar nahayat import ha mishe in:
import '../index.css';
import Employee from '../components/Employee'; // ./ means search in the same dir   --> u can use <Employee /> instead of <Employee> </Employee>
import {useState} from 'react'; //chera Employee ro to {} nazashti chun toye employee export default karde bodim
import {v4 as uuidv4} from 'uuid';
import AddEmployee from '../components/AddEmployee';
import EditEmployee from '../components/EditEmployee';
import Header from '../components/Header'


hala kule App.js ro khali kun va faghat ye return dashte bash ke tosh call kun be <Employees/>
be rahati ye page dorost kardim va az tarafi code emon ham organize tar shood


nokte dovom : har page nabayad ye header tosh bashe balake Header bayad yeki bashe to hame yani mikhaym automatic bashe vase tamame page ha va ro har kodum nazarim1
pass oon header e balalye
so surround the <Employees/> tag inside a header in App.js:
<Header> <Employees/> </Header> 
yadet nare Header e dakhlele Employees.js dar folder pages ro ham pak kuni

Ama alan unfortunately kar nemikune bayad Header.js ro dorost kuni
bayad vorodi func Header ro tosh benvisi props
injoori har chi ke dakhle tag e Header hast --> ke felan alan Employees hast miad to props  hala in props ro ke dar Header.js daryaft kardi bayad tamame child hash ke alan faghat Employees hast ro render kuni
dar paeen </Disclosure> benvis {props.children}
ke dar vaghe chi mishe --> engari tag e <Employees/> insert mishe be entehaye function e Header.js
deghat kun bayad ba <> </> surround kuni chun {props.children} gozashti ke shod do ta element ke bayad single element return beshe

kholase --> az props dar Header.js use kun ta Employees ro bendazi tosh zeman az fragment ham bayad use kuni --> yani <> </>


--------------------
rounting inside of react --> differetn url path to go to different pages ---> we need to install react router dom
npm install react-router-dom
hala 3 ta chiz ro bayad import kuni
import {BrowserRouter, Routes, Route } from 'react-router-dom'

hala dar App.js hame chio surround mikunim toye tag e BrowserRouter --> header ro ha hamintoor chun ba inkar header NavLink capabilities migire
  <BrowserRouter>
    <Header>
      <Employees/>
    </Header>
  </BrowserRouter>

  hala tag e Routes ro benvis to tag ha

  dar kul sakhtar vase ijad URL path ine:
  toye element component bayad bezari ---> masalan Employees page ro bezar

  <BrowserRouter>
    <Router>
      <Route path='/' element={}>
      <Route>
    </Router>
  </BrowserRouter>

  age jaye path='/' bezari path='/employees' masalan oonvaght home page blank mishe va bayad dar URL browser benvisi http://localhost:3000/employees/# ta bebini xmen haro


  ye page dg dorost kun be esme customers.js 

  kholase App.js et mishe in:

import './index.css';
import Header from './components/Header'
import Employees from './pages/Employees';
import {BrowserRouter, Routes, Route } from 'react-router-dom'
import Customers from './pages/Customers'


function App() {
  
  return (
  <BrowserRouter>
  <Header>
    <Routes>
      <Route path='/employees' element={<Employees/>}/>
      <Route path='/customers' element={<Customers/>}/>
    </Routes>

    
    </Header>
  </BrowserRouter>
  );
}

export default App;



hala dar nahayat Header ro ba in link ha mikhaym update kunim

const  navigation ro bayad set kuni ba href eshon

const navigation = [
  { name: 'Employees', href: '/employees', current: true },
  { name: 'Customers', href: '/customers', current: false },
  { name: 'Projects', href: '#', current: false },
  { name: 'Calendar', href: '#', current: false },
]


alan ok shode va mitooni az tarighe nav bar beri be page haye mokhtalef ama ye giri ke hast ine ke vaghti masalan miri to page e customer dar navbar highligh roye Employess hast hamchenan
in ro jalase bad dorost mikunim



you can also define foooter after the props.children in Header.js


zemnan pages hamoon component hast faghat khoobe ke page haro toye page folder bezarim

------------------------------------------------------------
Now lets fix the navigation bar because the background of navbar doesnot switch and we have btter react component that we can use for links instead a simple 'a' tag

dar Header.js dar const navigation bia va var e current ro pak kun chun ye chize behtar migim alan-->
jaye 'a' az tag e Navlink use mikunim ke behtare --> it has the active capability built into it --> az react-router-dom import mishe Navlink


dar Header.js --> className ={({isActive})=>{}} ---> chun NavLink Active bodan ya naboodan ro barmikagone mitunim azash use kunim pas vase hamiin injoori neveshtimaz tarafi navlink ye object barmigardoone vase hamin {isActive} ro to{} neveshtim ke faghat oon bakhsi ke ma mikhaym ro pas begirim az object
zeman navlink prophash href nadare balke "to" dare ---> pas benvis to={item.href}

zeman age dar App.js header et biroone BrowserRouter bashe inja kuli error mide



-------------------------------------------------------------
clean up Header :
vase drop down mobile ham haminkara ro bokon faghat style e block ro negah dar ke drop down tor behse va jaye Disclosue.botton ham bezar NAvlink

dar moreder disclosure dar site e headless UI bekhoon


dar Employess.js in kaht     <div className="App bg-gray-300 min-h-screen">
onaee ke dakhele quotation hast ro bebar ro Header bezar

yani dar Header.js:  <div className='bg-gray-300 min-h-screen'>{props.children}</div>
hala my-2 ro dar Employees.js hazf kun
va dar Header.js ezafe kun be in padding ro    <div className='max-w-7xl bg-gray-300 min-h-screen px-2 py-2'>{props.children}</div>

nahayat :
    <div className='bg-gray-300 '>
        <div className='max-w-7xl min-h-screen px-2 py-2'>{props.children}</div>
    </div>


  chera color ro dar div bala joda kardi chun dar paeen restrict mishod be max-w-7xl


  ------------------------------------------------------------

important concept ----> useEffect ---> allows us to have some section of code that will execute anytime our state changes --> additionaly : it will run after the page is initially loaded
pas ye bar dar beginning va dafe haye badi har vaght state, change kune run mishe --> pas ye section az code ro har vaght ma goftim run mishe!
useEffect ---> a side effect (sth that happens when you do sth else) --> you took some drug you'll have some side effect
dar doc e react --> mutation - subscription - timers - logging and other sideeffects are not allowed inside the main body of the component --> pas koja bezarimeshoon ? chun nemishe
mostaghiman dar func bezarimehoon --> az useEffect use mikunim ---> after the page is loaded 
suitable for many side effects like subscription and event handleres
dar kul mige bad load shodan useEffect ye seri code ro run mikune va niazi nist in codeha dar function compoennet emon bashe

ye component jadid besaz --> dictionary.js --> bezaresh dar folder e pages
tosho por kun
Route bezar barash to App.js--->        <Route path='/dictionary' element={<Dictionary/>}/>
va dar Headerjs ham link behesh ro dorost kun  --->   { name: 'Dictionary', href: '/dictionary'  },

hala berim az useEffect use kunim --> felan faghat ye console.log mikunim

dar Dictionary.js import kun useState ro 
useEffect do ta arg migire ke dovomi optional hast ---> avalin arg ye callback funchast 

    useEffect(()=>{
        console.log("State Updated",word);
    })

  
alan dar console check kuni--->vaghti toye input chizi minvisi dar console ham be mahze taghire state onja ham chap mishe --->
deghat kun useEffect ye bar moghe load kar mikune va badan ham har vght state berooz shod ---> alan refresh kuni page ro mibini ke baz dar consolde ye chiz chap mishe ---> ke to halat aval chun useState defaultesh string khali hast khali chap mikune

ama agar deghat kunim mibini dobar neveshte State Updated ke bekhater strict mode dar index.js hast 

  <React.StrictMode>
    <App />
  </React.StrictMode>

age tabdil kunish be <App /> ye bar minvise

doc ro bekhoon vase strictmode ---> ke mige strict mode can automatically detect sideeffects for you
dardevelopment eshkal nadare ama dar production na!

alan console.log e dakhele useEffect ro bad az setWord bezari khoob kar nemikune chun setWord async hast va momkene hanooz karesh tamom nashode bahse vali useEffect zemanat mikune 
ke pas az update shodan state run beshe! pas az useEffect use kun
pas set func ha asynch hastan

dependency array --> be useEffect begim ke be che state hayee ahamiat bede --> na alan ke be hamashoon ahamiat mide --> chun second arg ro vared nakradim
zemnan yad begire hamishe bad az useState az useEffect use kuni

pas berim soraghe second arg toye useEffect
zemana useEffect ro dakhele functiona compoent et benvis

alan ke second arg ro dar useEffect mikhaym bedim agar ghabl az useState bezarim error mide chun mige word hanooz define nashode
vaghti dep array ro yad begiri --> mitoni az backend api fetch kuni data va dar display page et namayesh bedi

-------------------------------------------------------------------
second arg restrict  what state we care about for useEffect to be triggered

dar kul se ta ravesh darim ---> pass no dep array ---> update for any state change
vase inke ino dark kunim --> chandta state dg ham mizarim to Dictionary.js

ravesh 2 ---> empty dependency array --> execute once --> update kuni input tag ro chizi log nemishe
karbord ---> do sth on initial page load after everything is loaded then you can execute some code --> masalana you wanna fetch some data to put in webpage
va ma faghat lazeme at the beginning of the page load on data ro begirim ke tavasote API return shode va bezarimesh to webpage 


3rd option --> passing word in second arg--> alan faghat first input update beshe dar conslog log mishe --> only execute when thos state variables are changed

nokte mohem----> alan in useEffect e paeen arg dovomesh word hast yani bad az inke in update beshe in run mishe pas be word vabastast ama be word2 vabaste nist pas 
consolde log marbot be word2 momkene eshteba bashe

    useEffect(()=>{
        console.log("State Updated",word+" "+word2);
    } , [word]);


SO USE EFFECT IS NOT GOING TO WAIT AROUND FOR WORD2

pas kholase mitoni useEffect haye mokhtalef dashte bashi --> masalan initial page dar aval ye kar bokone va badesh karhaye dg bokone ! pas avali khali vali dovomo ro ba dep array bezar

ye chiz dg- --> useEffect cleanUp ro nagoftim khodet bekhoon --> ghable inke componet az UI remove beshe in run mishe
pas age didi useEffect dare ye function return mikune in cleanup hast


-----------------------------------------
let's use the things we learnt ---> consume data from backend
using useEffect by fetching data from an API

use a freeApi on the internet that doesn't require API key --> key yani to authorize hasti az API use kuni
WordsAPI masaln mitoni chnata reuest per day raygan bedi --> wordapi on rapidAPI
problem --> requiring a key makes you front end app insecure --> chun key ro out bedi baghie use kun polesho to midi 
pas rah hal chie ??? bayad key ro dar back end azash use kuni va to connect beshi be backend
use the api key on the backend of the app --> ama alan nemikhaym backend besazim ! ---> pas az API felan use mikunim ke niaz be key nabashe
now any body can use that URL without a key
secure a key dar front end app ro fek nakunam raveshi dashte bashe

pas az free Dictionary API use mikunim ke free hast --> https://dictionaryapi.dev/
link aval ro copy kun --> https://api.dictionaryapi.dev/api/v2/entries/en/<word> 
va jaye <word> har chi mikahy bezar dar url e browser va bad enter kun


so how to make a request to this API using fetch --> fetch ye raveshee dar react--> raveshahye dg ham hast 
doc e fetch API ro bekhon dar mdn --> https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch va dastor ro copy kun bezaresh dar dakhele useEffect dar Definition.js
URL dakhlesho modify kun faghat in link ro bezar --> link dovom dar free dictionary API

yani mishe in
    useEffect(()=>{
        fetch('https://api.dictionaryapi.dev/api/v2/entries/en/hello')
            .then((response) => response.json())
            .then((data) => console.log(data));
    },[]); //Empty dep array --> exec once

alan dar log negah kuni mibini response omade --> array omade ---> har data ee ke omad ro ba index marbote begir  --> trraverse the structure to grab the thing you needpas bayad layer be layer beri to dardevelopment
{} bezar toye arrow function e dakhele in : .then((data) => console.log(data[0].meanings)); ta betooni chand ta kar kuni
hala har anche ke fetch kardi ro bezar to state save kun

dar nahayate func e mishe in --> deghat kun index haye info haye ke fetch kardim ro bayad khoodet dar consolde bebini dade ro ta befahmi che index e bedi
zemnan jaye hello dar baskhe fetch mitoni ye vocab dg bezari 
export default function Definition(){
    const [word , setWord] = useState();

    useEffect(()=>{
        fetch('https://api.dictionaryapi.dev/api/v2/entries/en/hello')
            .then((response) => response.json())
            .then((data) => {
                setWord(data[0].meanings);
                console.log(data[0].meanings);
            });
    },[]); //Empty dep array --> exec once
    return (
    <>
        <h1>Here is a definition: </h1>
        {word.map((meaning)=>{
            return <p>{meaning.definitions[0].definition}</p>
        })}
    </>
    );


ezafe kardan uuid--> haminjoori alaki:) ---> uuid ---> ghabalan ham dashtim in warning ro ---> https://www.npmjs.com/package/uuid --> bekhoon nahveye usage ro

moshkeli ke hast ine ke index ke kardim az koja malom request ma responseh sar e vaght biad pas ye ternary ijad kun
pas in khat ro ezaf kun be return 

        {word? word.map((meaning)=>{
            return <p key={uuidv4()}>
                        {meaning.partOfSpeech +' '}:
                        {meaning.definitions[0].definition}
                    
                   </p>
        }) : null}
alan pas age request ma kond bashe blank mishe page baraye chand sanie --> mitoni jaye null ham <p>Loading</p> bezari
zeman yadet bashe felan link e page e defintion ro dorst nakardim roye navbar pas dasti to url benvis

----------------------------------------------------------------------------------------
urls and parameterization of the previous episode


teaching the 3rd hook ---> useParams --> pass parameters through the urls ---> make our component more dynamics

masaln url ro taghir bedi akharesho be cucumber be jaye hello va defintion esh ro bebini
bayad beri dar App.js va ghesmate routing 

in route ro ezafe kun --->         <Route path='/definition/:search' element={<Definition/>}/>


useparam:
import { useParams } from "react-router-dom";

consolde.log(useParams()); ro bezan zire useState ta bebini chie! --> monteha deghat kun ke bayad url dar browser et ro injoori benvisi masalan
http://localhost:3000/definition/cucumber

pas hala ke didim chi pas mide --> assign esh mikunim be variable search
let {serach} = useParams();

hala dar Definition.js jaye word e hello benvis-->  + search


hala mitoni dar url benvisi
http://localhost:3000/definition/cucumber
ya benvisi
http://localhost:3000/definition/paint 
ya har vocab e ke bekhay


zemnan inspect ro bezan bad boro to network va bad yeki az jadval choose kun va dar bakhe samte rast boro to Response va bebin chi behet return karde API
pas age issue dashti check kun request et rafte dorost ya na


---------------------------------------------------------------
now let create a search bar for words 

4th hook ---> useNavigate ---> force the user to visit a new page in our app but its not a link --> link ro user majbore click kune ama useNav put this inside of a event handler
ghadima dar react router haye ghadimi az history use mikardan ama useNav jadid tare va dar newset version of react faghat ino gozashtan bashe ta azash use kunim


route e definition dar App.js ro hazf kun chun dg niazi nist va alan mikhaym dar page e dictionary ye search bar bezarim ke maro bendaze to page e definition/:search
zemana dar Dictionary.js word2 ro niazi nadarim hazfesh kun
search bar:

ye button bezar dar Dictionary.js:

            <button onClick={()=>{
                console.log("click");
            }}>Search</button>


navigation to a new page using useNavigate

import { useNavigate } from "react-router-dom"; yadet nare 
dar package.json chek kun install shode bashe --> age nadarish npm install react-router-dom ro bezan
const navigate = useNavigate();


navigate('/definition/tacos'); ---> in toro mibare be page e ke on too path esh ro neveshti
alan dar search benvisi texas va bad click kuni --> chizi nemiare chun dar network ham bebini to bakhshe response ya Headers 404 mishe yani dictionary chizi nadare neshoon bede
404 means the resource wasn't found
unable to connect ham momkene rokh bede --> error connecting


navigate('/definition/'+ word); --> in code ta alan ok hast vali vaghti rafti toye search va bad khasti back bezani barmigarde be safhe bedoone moshkele ama mishe ye kari ham kard
mishe pass in an additional object kun --> replace:true ---> vaghti back mizani aghabtar mire --> history 
search kun redirect ro ---> redicrect if a page is not found --->how to display content on that page like 404

-----------------------------------------------------------------
age be 404 khordim ya connection issue ba server barkhordim blank page khoob nist
pas ye 404 compoent besaz va redirect kun age be 404 khordi ya besorate inline componet 404 ro namayesh bede

dar fetch oon response ye status dare ke mitoni check kuni--> {} bezar ta khat code bishtari betoni benvisi dar multiple line
response.json(); ro tabdil kun be return response.json(); ke hich farghi ba halate .then(response) => response.json nadare --> chun in dar ye khat bood return nazashte barash ama alan
ma mikhay multi line benvisim bayad {} bezarim va return ro ham explicit benvisim


console.log(response.status); --> age 404 bargardon reditrect kun
redirect ro ham ba navigate anjam midim

if(response.status===404)
{
    navigate('/404');
}


hala dar dictionary page ye cherot pert benvis va serach ro rosh click kun mire to 404 ---> ama ghablesh neveshte neshoon mide ke doost nadarim neshoon bede
pas ino <h1>Here is a definition: </h1> bendaz to ternary bad az ? ke neveshti --> pas niaz be fragment ham dari chun chand ta element dari return mikuni

tamrin khoobie inkar vase hamiin man comment esh kardam ghablio ke ye bar dg badan anjam bedi

now lets go create a 404 component in component folder because its embeded inside another page --> in separation folder ha bishtar vase khoddemon mafhoom dare ama dar kule comp haye toye folder page ro ham mishe embed kard vali ma onae ro nemikhaym embed kunim mizarim to page1
name e comp ro ham bezar NotFound


ino ham be route ha ezaf kun -->         <Route path='/404' element={<NotFound/>}/>



in chie?--->         <Route path='*' element={<NotFound/>}/>   --> ino akar gozashtim chun injoorie ke tamae path haye bala ro mire age chizi peyda nakard ham 404 bede
in baes mishe age toye url browser bad az localhost3000 cherto pert ham neveshti 404 biyd
zemnan * be manaye everything hast

in dar defintion bara chie? --->     const [notFound , setNotFound] = useState(false); ----> ta az componet e ke taze neveshtim use kunim --> zeman in baes mishe ke url ro masaln ye kalame eshtebah neveshte bashim hamoon kalame wrong hamashoon
roye url bemoone va redirect nashe be /404

ino ham mizarim on paeen:

    if (notFound===true){
        return <NotFound/>;
    }

  albate behtaresh ke bokunim mishe in:

      if (notFound===true){
        return (
            <>
                <NotFound/>
                <Link to="/dictionary">Search Another</Link>
            </>
        );
    }


ke az Link ke bayad az react-router-dom import beshe use kardim

-----------------------------------------------------------------------------------------
error haye dg ham darim 000> Http response status codes ro search kun --> https://developer.mozilla.org/en-US/docs/Web/HTTP/Status


Client error responses
401 Unauthorized masalan ---> its up to the server to return the appropiate response ---> server mige to unauthorize hasti behet 401 midam!
pas ma bayad login beshim --> pas in mishe client error response
ya method not allowed --> wrong http method

server error ham darim ---> can not compute masalan --> inja 500 error migiri


pas inaro mishe dar Definition.js dar fetch check kuni

else if(response.status===401)
{
    navigate('/login');
}else if(response.status===500)
{
    // setServerError(true); //badan benvis age khasti
}

behtarin ravesh bara test use kardan az site http://httpstat.us/ ---> make a request to this page with the error code we want to recieve back
agar ham dar backend dari kar mikuni pas mitoni khodet inkaro bokoni

pas masalan dar Definition.js ye const url = 'http://httpstat.us/404' ijad kun va beedesh be fetch jaye url ghabli 
albate unfortunately filter hast in site


albate alan age const url ro ye chiz e cherto pert benvisi error status nemide balke error get o ina mide pas behtare ye chizi mesle in ham toye fetch bezari:
                if(! response.ok)
                {
                    setError(true);
                    throw new Error("Something went wrong");
                }

in chizi ke throw kardi ro paeen tar dar .then (data) cziresh .catch kun
alabte nemidoonam chera vaghti url e giberish mizanam nemire toye fetch va mostaghim mire to catch --> pas error ro true nemikune --> ????!!

pas dar kul backend ya API, status code haro be ma mide va bayad bekhoonimehson bebinim che status code option hayee return mishe va da front end dar fetch bahshoon deal mikunim

-----------------------------------------------
do some styling and refactoring of the dictionary and ... that we've Created

ezafe kardan Enter be search
va ye seri taghirat kochik dg
zemana reaplce true ro dar Ditionary hazf kun ke vaghti back mizani bargarde be page e dictionary
dar Dictionary.js jaye inke fragment bargardoni ye form bargardon va onClick e button mohtaviatesho beriz toye arrow func e onSubmit va kholase onClick button to pak kun az button tag--> chera ? because by default when you have a form, the button will submit that form
va alan mitoni az Enter key use kuni vaghti on form selected bashe


style dadane form --> chera addad to bracket hast --->  max-w-[300px] ---> chun addade custom darim midim

max-width chie? --> ghablan masalan component button va search bar kole page ro poshes midad ama alan faghat 300 pixel ro poshes mide --> ba inspect chek kun


        <form className="flex ...." 
            onSubmit={()=>{
            navigate('/definition/'+word);
        }}>
            <input className="shrink min-w-0 ...." 

be flex va bad dakhlesh tag e child esho shrink dadim ta vaghti safhe kochik mishe (masalan mobile) mishe in shrink beshe
zemnan by default ina min width daran khodeshon va age min-w-0 nazari kar nemikune

DefintionSearch.js ro ijad kun va content e dakhele Dictionary.js ro beriz tosh va dar Dictionary.js faghat DfeintionSearch.js ro return kun
alan mesle ghabl hast vali farghesh ine ke ye component darim ke mitonim reuse kunim (hamiin DefinitionSearch manzoore) 
hala dar Defintion.js in component ro dar enteha use kun ta betooni search again bokoni


ino dar Dictionary.js bezar
    <div className="flex justify-center">
        <DefinitionSearch/>
    </div>

alan toye page e dictionary center mishe vali vaghti serach mikuni center nist --> khoshgel shode alan


setup kardan url paramterization --> yani injoori url bedi va kar kune http://localhost:3000/dictionary/hello

dar App.js yechizi ghablan vase defintion/:search nevehste boodim ke pakesh kardim pas alan berooz kun be in

<Route path='/dictionary/:search' element={<Definition/>}/>

zeman bayad dar defintion search ham dorostesh kuni -->                  navigate('/defintion/'+word); ro berooz kun be:
       navigate('/dictionary/'+word);


--------------------------------------------------------
Build out a backend  and connect to it by react 
BackEnd ----> conenct to a backend ---> storing info in a data base ---> ta az har computer ee website ro run kuni ye chiz ro show kune!
stored in a server and we connect ot a server from the front end
zaban e backend kheili mohem nist balke interface e beyne front va backend mohem tare
so connecting to backend from the front end is similar across all of them

interface --> usually build using REST API ---> agreed way of communicating that has the ability to get info add info edit info and delete info --> CRUD --> 
CRUD---> create read update delete ---> you can do those things no matter what backedn software we are writing 
rest dar vaghe ye agreed way of transfering data between application hast --> its in a json format --> pas rahat miad to react va ma ham ghablan dar Employees.js json tor neveshte bodim

ziad detail albate dar backedn nemigim --> vali caleb course dare vase backend python+Aws + post gress database
az Django use mikunim dar backend alan --. python to nasb kun va bad Django ro ok kun
now create a virtual environment for you backend --> ye mkdir backend  --->cd kun tosh
python3 -m venv .venv --> its a hidden directory --> doty dorost kardim ke leave it alone bokoni va kasi behesh kari nadashte bashe
agar venv khoob dorost nashod terminal payam mide ke bayad venv ro nasb bokonu ba apt install
sudo apt install python3.8-venv


vase har project dar python bayad ye virtual env dashte bashi
activate the environment --> to go into the environemnt ---> its a lens that we look at our project through
. .venv/bin/activate

dar windows active kardan injoorie:
.venv\Source\activate

python -m pip install django

command django-admin ro bezan ta command haro bebini
django-admin startproject name_of_the_project . --> . to refere to the current directory
python3 manage.py runserver

ba manage.py rahat tar dastorat ro mishe ejra kard pas az in tarigh run mikunim
kholase alan ye running server dar http://127.0.0.1:8000/ darim
boro be in address dar browser 
az localhost:8000 ham mitoni use kuni

backend is cpable of delivering html chun to address bala ham mibin ke ye site engari baz shode ---> vali badan mirim soraghe json file ro jaygozin html mikunim
vase json niaz be ye tool dg ham hast

---------------------------
create a backend API --> difficult 
hala ba vs code in app ro baz kun--> dar dir az "code ." use kun ta mostaghim path ro dade bashi

git init kun
touch .gitignore bezan
search kun dar google ---> gitognore django 
site e topdal ro baz kun 
https://www.toptal.com/developers/gitignore/api/django
copy kun content site ro 
alan adade 5k dar bakhse source control e vscode drop down mikune be 7 ta
git add .
git commit -m "Init Project"

hala dar git boro repo dorost kun 
va chun locally repo ro dorost kardi az ghabl az 3 dastor paeen use kun

git remote add origin git@github.com:sohail70/React-backend-django.git
git branch -M main
git push -u origin main

hala dar terminal vscode v env ro activate kun age active nisti


benvis python3 --version 
hala benvis python --version 
javab mide chun ba python3 venv ro dorst kardi niazi nist "3" ro bezari
az pip ham directly mitooni use kuni niazi nist ghablesh python3 pip install benvisi

hala benvis:
pip install django-rest-framework

pip install --upgrade pip ---> age lazem shod bezan


ye chize khoobi ke react dasht in bood ke vaghti package nasb mikardi be sorate automatic package.json ro update mikardan
ama dar django package list behseh add nemishe bayad manually dorost kuni
pip freeze  ro bezan ---> kule pakcage haee intall shode ro neshoon mide 
dastore zir robezan ta redirect behse be file req...txt
pip freeze > requirements.txt
this file keep track of the packages we've had installed
va alan dar django ye chizi shabi npm install dorost shod ke miaym minvisim: pip install -r requirement.txt --> mire to file va nasb mikune
pas package age mikhay nasb kuni ba requierment.txt ezafe kun ba zadan dobareye dastore zir:

pip freeze > requirements.txt

alabte be nazaram az pip freeze --local > requierments.txt use kun choon local faghat packhaye toye virtual env ro miare

pas har vaght chizi ba pip nasb kardi dastore pip freeze --local >requie,emt.txt ro bezan badesh va age chizi pak shod dastore paeen ro bezan
pip install -r requirements.txt ro bezan hala --> ke mishe hamoon npm install to react


khoob berim soraghe Rest --> bayad ye model dorst kunim in our django --> rep of data
url path --> locatio nto oaccess the daryaft
serializer --> describe how to go from data base object to json data



-------------------------------------------------------------------

hala vs code ro vase folder e backend baz kun:
virtual env ro active kun aval ba -->  . .venv/bin/activate
hala python manage.py runserver ro bezani error mide --> 18 unapplied migration ---> chun darim ba structured data base kar mikunim ke by default sqllite hast
va mishe ba postgress ya nosql ya harchi taghir peyda kune
bayad migration use kuni ---> describing the changes that we need to make to the data base from our code --> ta mostaghiman ba sql kar kunim
pas python manage.py migrate ro bezan
alan ke mikhay model ro dorost kuni bayad in migration ro ham add kuni
boro dar folder customers --> models.py dorost kun --> to describe any model that we need for out application 
model is just another word for database table ---> different entities that we need to describe


ino tosh benvis 

from django.db import models

class Customer(models.Model):
    name = models.CharField(max_length=200)
    industry = models.CharField(max_length=100)

pas class e modelet bayad az models.Model ers bebare
ina shod attribute each customer
hala chejoori ino vared data base kunim? dar cmd python mange.py makemigrations customers
error mide ---> boro to setting esme app et ro dar INSTALLED_APP vared kun yani benvis 'customers

alan ke dobare dastor ro bezni ye migration folder ijad mishe --> ke taghirati ke dar database dadim ro neshoon mide

hala bayad in change ro apply kuni be database --> python mange.py migrate ro bezan --> hala tamoom shod

agar func ha ro nemishani az python manage.py ro bezan ta list kune


hala url path ro bedim ---> dar url.py bayad inkaro anjam bedi --> shabih routing dar react hast

ino benvis -->     path('api/customers/',views.customers, name='customers') --> views.customer dar vaghe func e hast ke incoming request ro migire

in import ham yadet nare --> from customers import views
va alan dar project et file views.py ro ijad kun
va tosh benvis 
def customers(request): # ke in mikhad data ee ke az samte client dare be sorate request miad ro handle kune
  #invoke serializer    ---> which goes from data base object to json data
  pass

felan pass neveshtim vali badan poresh miknuim --> felan berim seralizer ro dorst kunim
ye serializer.py dar project ijad kun
ghable inke poresh kuni boro dar setting.py va dar bakhshe INSTALLED_APPS ino vared kun 'rest_framework'
hala dar serializers.py benvis:

age intellisens moshkel dare ctrl+shif p ro bezan va benvis select interpreter va vend ro choose kun

kholase dar serailizers.py benvis:

from rest_framework import serializers
from customers.models import Customer
class CustomerSerializer(serializers.ModelSerializer):
    class Meta:
        model = Customer #model e ke mikhay serialize kunim
        fields = '__all__' #che field hayee tosh mikhaym? hame --> mishe har attribute ke mikhay ro to list bezari
        
hala az in serializer dar view et use kun
boro dar views.py va benvis:

from customers.models import Customer
from django.http import JsonResponse
from customers.serializers import CustomerSerializer
def customers(request):
    #invoke serializer and return to client
    data = Customer.objects.all() # to get all our cutomer objects 
    # now serialize all this data
    serializer = CustomerSerializer(data , many=True)
    return JsonResponse({'customers': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim



kolase models describes our data va serializer tell us how to serialize it!

hala dar cmd benvis python manage.py runserver
va bad boro be local host e 8000 ta back end ro bebini

page not found mide --> bekhatere url hast !
dar url.py neveshte boodi ke     path('api/customers/',views.customers , name='customers')

pass byad benvisi dar browser : localhost:8000/api/customers

hala site ino namayesh mide --> {"customers": []} --> data khalie 

--------------------------
how to add data to the json and consume it from react

ye file admin.py ezafe kun dar backend project --> it describes an admin site that allows us to have CRUD access to the dat base witohut extra effort
alan age dar browser benvisi --> localhost:8000/admin varede admin page mishi --> alabte in az ghabl ham vojod dasht rabti be ijad file admin.py nadare
account chejoori ijad kunim --> az terminal
python manage.py createsuperuser --> ino benvis 
hala user pass bede behehs --> har do ro bede soheil --> alabte dar production hamchin password e simple e nade
hala mitoni vared sho va different table haro bebini va dat a ro bebnini
hala mikhaym dar admin.py hamin page ro config kunim ta new table emon inja show up kune

inaro dar admin.py benvis:

from django.contrib import admin
from customers.models import Customer
admin.site.register(Customer)

hala age localhost:8000/admin ro ye refresh kuni bayad customers ezaf shodebashe age nashood server ro beband dobare run kun
chi ijad shode ? App name and we have one table in there and it is customer --> you can add inside --> a cutomer object
hala ke ezaf kardi mitoni beri dar localhost:8000/api/customer va bebini chi ijad shode

{"customers": [{"id": 1, "name": "Intel", "industry": "Processors"}]}


shabih hamoon employee haye bood ke dar react dashtim
do ta dg ham ezaf kun


now how to consume the api from react application --->  az Definition component use mikunim chun ghablan ham web request karde bodim bahash va chiz toye page goazhte bodim bahash
process injoori bood:
az useEffect use kun which makes a request to a url  and assign that to some data and loop thoruhg the data and display it on the page
pas Definition.js ro copy kun
in info haro mizarim to customer page ke barash toye navigatin bar ye page gozashtim
berim customer.js ro por kunim jaye inke tosh Hello There bashe

fetch kulan insheklie

        fetch()
        .then()
        .ten()
hala tosho por kun




kholase inaro dar Cusotmer.js benvis:

import { useEffect , useState } from "react";

export default function Customers(){
    const [customers , setCustomers] = useState();
    useEffect(()=>{
        console.log("Fetching...");
        fetch('http://localhost:8000/api/customers/') // forward slash akhar moheme
        .then((response)=>{return response.json()}) //reponse is here -->mitoni {} va return ro ham nazari
        .then((data)=>{ //data to assign to some state
            console.log(data);
            setCustomers(data.customers); // cutomers array e dakhele object ro migirim ke bottonim roye array map bezanim
        }) 
    },[]); //remmeber the empty dependency array --> to do this only once in initial load
    return(
        <>
            <h1>Here are out customers</h1>
            {customers? customers.map((customer)=>{
                return <p>{customer.name}</p>
            }) : null}
        </>
    );
}
ama alan beri site et rochek kuni kuli dar console error dari va mige block karde ---> chun by default backend emon tamae request haro deny mikune
bayad ye package nasb kuni ke CORS ro config kuni
kholase localhost:3000 path e hast ke darim azash request midim --> in mishe origin ke bayad dar backend begim i legit hast

dar cmd backend benvis --> pip install django-cors-headers
va hala benvis:
pip freeze --local > requirements.txt

hala be INSTALLED_APP va MIDDLEWARE dar settings.py ezafash kun

baraye inke bebini chi bayad ezaf kuni az in komak begir --> https://github.com/adamchainz/django-cors-headers


INSTALLED_APPS = [
    ...,
    "corsheaders",
    ...,
]


MIDDLEWARE = [
    ...,
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    ...,
]

CorsMiddleware should be placed as high as possible ---> zeman '' bezar jaye "" ta ba bghaie yeki beshe va ayazan dar bala bezar 

hala ye list ee az allowed origin haro bede tebghe site e bala:
CORS_ALLOWED_ORIGINS = [
    "https://example.com",
    "https://sub.example.com",
    "http://localhost:8080",
    "http://127.0.0.1:9000",
]

ke mishe in --> 
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000'
]




alan dar console data backend ro mibnin
hala to page namayeshesh bede ba use kardan az map function

-------------------------------------------------------------------------
create a details page --> request the details from one element from our API
yani masalan dar page e customers roye Intel clock kuni ke ye page jadid baz she va tozihate on customers ro neshoon bede

ye button ha mmizarim ke new customer ijad kunim

in ghabelyato dar backend ke rahat dashtim ---> hala mikhay dar react ham in CRUD abilty yani create - read - update - delete ability ro dashte bashim

'POST' ---> it means how you add data
'PATCH' --> for updating the data --> 'PUT' is more common than 'PATCH'
'DELETE' --> deleting the data


zeman vaghti dari az front be back requet midi in be sorate default 'GET' request hast
alan dar inspect dar baskhshe network negah kuni va refresh kuni dar bakhshe request be customers click kuni 'GET' ro mibini
alan vase inke full CRUD vapability build kunim az request method haye dg be gheyre GET az tarigh fetch ashna mishim


now lets make a details API
mikhaym be backend id befrestim va localhost:8000/api/customers be ma detail ono bede dar backend bayad do ta kar kunim 
dar urls.py sepas associate view dar view.py 
vase url nahveye paramterize kardan ham injoorie --> <type_of_data:name_of_data> --> ke masalan mishe <int:id>
kholase dar urls.py ino ezaf kun:
path('api/customers/<int:id>', views.customer , name='customer')

zeman  view.customer minvisim chun ye donast pas 's' nadare singular hast 

hala dar view customer ro bezar:
deghat kun pk mishe primary key ke az samte front miad

def customer(request,id):
    data = Customer.objects.get(pk=id) # we don't wanna get all of them so we use get() instead of all() 
    serializer = CustomerSerializer(data)
    return JsonResponse({'customer': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim

inam shod endpoint e jadidemon --> mitoni to browser negash kuni --> http://localhost:8000/api/customers/1  --> id esh 1 hast
hala mitoni be in endpoint baid e 1 request befresti

hala berim to react va vasl shim be in endpoint ha
<p>{customer.name}</p> dar Customers.js ro ba tag e Link jaygozin kun (Link tag male react-router-dom hast)
ke mishe in:

<p><Link to={"/customers/"+customer.id}>{customer.name}</Link></p>

hala mire to page ha vali info ha tosh nist
ye page jadid dar folder page bezar ke vase individual customer ha hast
esmesh ro ham bezar Customer.js ke singualr hast ba Customers.js ghati nashe
shabih be page e Definition.js minvisimesh
yani mikhaym az useParam use kunim

bayad dar App.js ham route ro dorost kuni ta componet Customer.js namayesh dade beshe
hala ba haminghad code zir:

import { useParams } from "react-router-dom";

export default function Customer(){
    const {id} = useParams(); //useParam returns the object but we only want the id so we put it in {} to destructure that
    return (
        <>
            <p>{id}</p>
        </>
    );
}


age dar browser benvisi
http://localhost:3000/customers/3
adade 3 ro to page neshoon mide

vali mikhaym one time rokh bede ---> pas useEffect

dar nahayt file Customer.js mishe in:



import { useParams } from "react-router-dom";
import { useEffect , useState } from "react";
import { Link } from "react-router-dom";

export default function Customer(){
    const {id} = useParams(); //useParam returns the object but we only want the id so we put it in {} to destructure that
    const [customer , setCustomer] = useState();
    useEffect(()=>{
        console.log('useEffect'); //dobar useEffect ro mibini chun strict mode et active hast --> felan bezar bashe chun dar dev mode hastim
        const url = 'http://localhost:8000/api/customers/' + id;
        fetch(url)
        .then((response)=>{return response.json()})
        .then((data)=>{
            setCustomer(data.customer); //data e ma dar backend chanta property dare vase hamiin az dot use kardim
        })
    } , []);
    return (
        <>
            {customer ? 
            <div>
                <p>{customer.id}</p>
                <p>{customer.name}</p>
                <p>{customer.industry}</p>
            </div> 
            
                    : null}
            
            <Link to='/customers'>Go back</Link>
        </>
    );
}



---------------------------------
hala age GET be moshkel bar bokhore va 404 bede chi? bayad ye page e appropriate namayesh dade beshe 
dar Customer.js dar then e aval 404 ro peyda kun
dota rah darim ya new URL bezanim ba useNavigateya ye component 404 ijad kunim ke bayad ye js jadid ijad kuni
path e 404 ro ham ke ghablan set up karde budmim dar App.js
alan age bezani dar site browser --> http://localhost:3000/customers/5 --> cutomer 5 ke vojod nadare
alan age enter kuni redirect nemishe!!!! ---> age be console ngah kuni dari status 500 migiri!!!---> backendemon status monaseb ro nemide pas backend ro dorst kunim

dar view.py data=Customer.objects.get(pk=id) agar dat found nashe exception mindaze va vase hamin khataye server mide (500)
alan age benvisi http://localhost:8000/api/customers/5 ke male server hast mibnini dastan ro va dar vaghe paeen tar az code e bala nemirim chun exception mindaze pas
bayad bendazim to try catch ---> view.py ro dorost kun
zemnan in page e 404 ke alan dar backend ijad shode ro dar production nemibinim chun alan dar development hastim debug mode true hast 
(Youâ€™re seeing this error because you have DEBUG = True in your Django settings file. Change that to False, and Django will display a standard 404 page.)
pas code dar view.py mishe --> zeman import kardan Http404 yadet nare

    try:
        data = Customer.objects.get(pk=id) # we don't wanna get all of them so we use get() instead of all() 
    except Customer.DoesNotExist:
        raise Http404('Customer does not exist') 


alan age   http://localhost:3000/customers/5 ro run kuni bebin chi miad  
hala front end emon a mdorost shod



ravesh dovom : use kardan az state --> notFound va use kardan azash dar return entehaye Customer.js



refactoring ---> ye seri jaha url hardcode shode darim ke mikhaym bezarimesh ye ja --> ye shared.js ijad kun dar folder e src
Customer.js va Customers.js ro dorst kun va import kun in url e baseUrl ro


-------------------------------------------
Exapnd our api to be have full CRUD ability
dar backend dar view.py ---> ravesh try except and json respons javap mide vali ravesh behtar hast:
import ha:

from rest_framework.decorators import api_view #which methods are allowed
from rest_framework.response import responses #json 404 or html Response
from rest_framework import status #options fro status code --> 200s 300s 400s and others


code ham paeenesh injoori taghor mikune:

@api_view(['GET','POST','DELETE']) #define api that can take get post delete request --> we used api decorator which describes functionality fro this function
def customer(request,id):
    try:
        data = Customer.objects.get(pk=id) # we don't wanna get all of them so we use get() instead of all() 
    except Customer.DoesNotExist:
        #raise Http404('Customer does not exist') 
        return Response(status=status.HTTP_404_NOT_FOUND)

    serializer = CustomerSerializer(data)
    # return JsonResponse({'customer': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim
    return Response({'customer': serializer.data}) 

hala ino dar browser bezar ===> http://localhost:8000/api/customers/5 --> ye page jadid ke male rest hast baz mishe
use kardan az in API django rest in khoobi ro dare ke dg external api testing tools mesle postmen niazi nist  as much!
mishe rahat raft be page e customer 3 ---> va DELETE ro dar button bezani ama kar nemikuni --->hanooz functionality nadare byad code sh ro dar view.py benvisi va in buttun hala delete mikune


code ro injoori kun:

@api_view(['GET','POST','DELETE']) #define api that can take get post delete request --> we used api decorator which describes functionality fro this function
def customer(request,id):
    try:
        data = Customer.objects.get(pk=id) # we don't wanna get all of them so we use get() instead of all() 
    except Customer.DoesNotExist:
        #raise Http404('Customer does not exist') 
        return Response(status=status.HTTP_404_NOT_FOUND)
    if request.method =='GET':
        serializer = CustomerSerializer(data)
        # return JsonResponse({'customer': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim
        return Response({'customer': serializer.data}) 
    elif request.method=='DELETE':
        data.delete()
        return Response(status=status.HTTP_204_NO_CONTENT) #har status e ke fek mikuni monaseb hast ro bezar


ala mitoni az button DELETE dar backend browser use kuni ta customer e delkhah ro delete kuni 
masalan boro http://localhost:8000/api/customers/3 va DELETE ro bezan
alan belafasele to hamoon page minvise 204_no_content ---> hamoon chizi ke dar views.py neveshte boodi
age dobare beri be page e customer 3 --> 404 mide hala


in dastante decorator ro vase def customers ham bezar --> ta age dar backend site customers ro ham khastim bebini oni ke delete shode ro neshoon nade
alan page customers ham mesle customer dar backend page khoshgel shode

POST chikar mikune ---> edit the data for specific customer ---> button ham dare dar backedn page --> faghat code sh ro bezar dar views.py


code hala mishe:


@api_view(['GET','POST','DELETE']) #define api that can take get post delete request --> we used api decorator which describes functionality fro this function
def customer(request,id):
    try:
        data = Customer.objects.get(pk=id) # we don't wanna get all of them so we use get() instead of all() 
    except Customer.DoesNotExist:
        #raise Http404('Customer does not exist') 
        return Response(status=status.HTTP_404_NOT_FOUND)
    if request.method =='GET':
        serializer = CustomerSerializer(data)
        # return JsonResponse({'customer': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim
        return Response({'customer': serializer.data}) 
    elif request.method=='DELETE':
        data.delete()
        return Response(status=status.HTTP_204_NO_CONTENT) #har status e ke fek mikuni monaseb hast ro bezar
    elif request.method=='POST':
        serializer = CustomerSerializer(data , data=request.data) #arg1 --> data ee ke az DB migiri hast va arg2 mishe new Data
        if serializer.is_valid(): #check to see if the serialization was valid
            serializer.save()
            return Response({'customer':serializer.data})

        return Response(serializer.errors , status=status.HTTP_400_BAD_REQUEST)


hala boro to website http://localhost:8000/api/customers/1
va ino copy kun
    {
        "id": 1,
        "name": "Intel",
        "industry": "Processors"
    }

dar paeen dar box e content:
va info haro berooz un har joor khasti
    {
        "id": 1,
        "name": "IntelJadid",
        "industry": "Processors"
    }

hala post ro bezan


dar bakhshe customers ke s dare mishe new data ezaf kard --> id ro khode DB set mikune

pas boro to in page http://localhost:8000/api/customers/

alabte alan ar nemikune POST ro bazni 
balke bayad bayad to def customers bayad POST ro implement kuni:


code def customers injoori mishe:

@api_view(['GET','POST'])
def customers(request):
    if request.method=='GET':
        #invoke serializer and return to client
        data = Customer.objects.all() # to get all our cutomer objects 
        # now serialize all this data
        serializer = CustomerSerializer(data , many=True)
        # return JsonResponse({'customers': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim
        return Response({'customers': serializer.data}) #serializer.data dar vaghe serialize shode ye data  hast- choon in ba json compatible hast va ma ino be onvan response miferestim
    elif request.method=='POST':
        serializer = CustomerSerializer(data=request.data) #in dg mesle paeen arg 1 nadare chun nemikhaym edit kunim balke mikhay ijad kunim
        if serializer.is_valid():
            serializer.save()
            return Response({'customer': serializer.data}, status=status.HTTP_201_CREATED)
        return Response(serializer.errors , status=status.HTTP_400_BAD_REQUEST)

hala boro ino dar oon box ezaf kun:
{
        "name": "BurgerKing",
        "industry": "burgers"
}


id nemikhad vared kuni chun khode DB dorost mikune baramoon

POST ro ke bezani id=4 ijad mishe
id=3 skip shode chun delete esh kardi

hala dg essential API endpoint vase crud ro dari

-----------------------------------------------------------------------------
match the front end to backend api endpoints
dar front delete bezarim ke az backend delete kune va in dastana

