node js ro nasb kun ta command npx nasb beshe
npx create-react-app hello -->https://reactjs.org/docs/faq-structure.html   
age error dad npm config delete proxy ro bezan
faghat filehaye toye source processed mishan tavasote webpack --> vase sor@t
----------------

khoroji in bood:
Success! Created hello at /home/sohail/React/hello
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd hello
  npm start

Happy hacking!





--------------
npm vase run kardane project hast




dar src index.js ma kar mikunim  --> rendering the app.js file ----> some poeple delete one of those but we keep that ---> so out entire app is gonna built in app.js
dar public ham index.html hast --> we don't have to touch that --> java script poresh mikune badan
app.js ha important hast 
<App /> is the top component in the hierarchy
everybody will build in App.js but you can do it in index.js too

file haye logo dar public ro pak kun niazi nadarim
dar src ham dar App.css kulan pak kun

AppTest.js va index.css ro ham pak kun

hala ke ina ro pak kardi bayad jaee ke az ina dare use mishe ham pak beshe vase inke sari befahmi 
dar terminal npm start ro bezan ta error haro bebini
deghat kun cd karder bashi be folder e hello

pas dar App.js import e marbot be logo ro pak kun
dar index.js 
import reportWebVitals from './reportWebVitals';


oon paeen ham reportWebVitals rocall kardim va comment haye balash ro hazf kun

line 7 app.js ham logo ro neveshte tag ro pak kun

index.css ro ham az index.js pak kun


----------------------------------------------------------------------------

localhost:3000 ---> we are developing locally ---> npm run build ro bezani mikhay bebari to internet yani --> build dir dorost mikune va inaro to aws3  upload mikunu

age mikhay inaro ham locally check kuni mituni benvi ---> serve -s build --> to serve it on local host as well

npm run start --> loacl developing ---> any changes will be immediately shown to browser
npm build --->
serve command to test it


dobare npm run start ro bezan ta bargardi be development

taghir bedi build file taghir nemikune balke bayad har bar npm build ro bezani AGAIN

dar packages.json mitoni dependencies age dari be pack haye dg bezari

npm install ro bezan ---> dar package dep haee ke neveshti ro install mikune


package-lock .json exact version use shode dar in app ro neshoon mide ta baghie bebinan ---> yani masala ^13.4.0 in yani had aghal version 13.4 bahse
npm install ro bezani regenerate mikune package-lock.json ro

in pack haro dar source control nakun ---> dar node_modules hame chi oonja nasb hast ---> ino ham mishe generate kar 
pakesh kun va bad npm install bezani hame dobare nasb mishe! ---> vase hamin chun mitone generate beshe dar source control (git ) nemizarimesh

manifest.json ro ham daresh logo haro pak kun

dar .gitignore har chi benvisi ignore mishe 
masalan /build ignore mishe chun generetae mishan rahat
ya masalan /node_modules



manifest.json --> mobile icon --> update bashe in file vase production
robots.txt --> how differnet websracpers should treat this for bots and search engine that is.

------------------------------------------------------------------------------------
everything in react is desinged as a comp
component ---> reusable code to use all over our app
component shabih func hastan --> faghat html return mikunan ---> dar vaghe hamoon jsx barmigardonan ---> fek kun hamoon html hast
jsx dar vaghe syntax extesnion to js hast ---> templatizing h1 using variable  az ghabelyat hash hast
kholase: ---> html+javasript ---> eval to html


avalin component ma Employee hast ke ye folder ijad kardim be esme component va bad dar app.js import kardim va dar return tag esh ro neveshtim

compoent ha functionality ro daran  --> each comp is self sustained  --> comp nesting ham okay hast chun dar comp e App omadim comp e Employee ro neveshtim 
dar app.js mitoni ham jsx (html) benvisi ham logic faghat bayad toye {} bezarish


------------------------------------------------------------------------------------
-props: --> important
how to pass data from parent to child component ---> from App to Employee masalan
kholase ba props --> you can pass specific values for different variables ---> masalan Employee Soheil
age mikhay chandta chiz ro return kuni dar return --> masalan dar return e employee --> az () ghable return use kun
va deghat kun az <> </> yani fragemment aval va akhar code use kuni yani hmae chi ro bendazi to in chun bayad ye single element return beshe 
semicolon ro ham bardar


props are not meant to be changed in child copmponet
-------------------------------------------------------------------------------------
state:
vase taghire props dar parent 
import kardim useState ro dar App.js va ba setRole state ijad kardim --> state ijad kardim chun var be UI vasl nist vali state vasle va vorodi input ee ke gereftim ro set kardim be role e Abby 

------------------------------
useState is an example of a hook --> there are other hooks to introduce functionality into our component very easily
hooks alow to use feature without class ---> we prefer to use functions with hooks 



------------------------------
Tailwind Css ro azash mikhaym use kunim --> google search kun : tailwind css installation react

