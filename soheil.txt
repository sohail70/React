node js ro nasb kun ta command npx nasb beshe
npx create-react-app hello -->https://reactjs.org/docs/faq-structure.html   
age error dad npm config delete proxy ro bezan
faghat filehaye toye source processed mishan tavasote webpack --> vase sor@t
----------------

khoroji in bood:
Success! Created hello at /home/sohail/React/hello
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd hello
  npm start

Happy hacking!





--------------
npm vase run kardane project hast




dar src index.js ma kar mikunim  --> rendering the app.js file ----> some poeple delete one of those but we keep that ---> so out entire app is gonna built in app.js
dar public ham index.html hast --> we don't have to touch that --> java script poresh mikune badan
app.js ha important hast 
<App /> is the top component in the hierarchy
everybody will build in App.js but you can do it in index.js too

file haye logo dar public ro pak kun niazi nadarim
dar src ham dar App.css kulan pak kun

AppTest.js va index.css ro ham pak kun

hala ke ina ro pak kardi bayad jaee ke az ina dare use mishe ham pak beshe vase inke sari befahmi 
dar terminal npm start ro bezan ta error haro bebini
deghat kun cd karder bashi be folder e hello

pas dar App.js import e marbot be logo ro pak kun
dar index.js 
import reportWebVitals from './reportWebVitals';


oon paeen ham reportWebVitals rocall kardim va comment haye balash ro hazf kun

line 7 app.js ham logo ro neveshte tag ro pak kun

index.css ro ham az index.js pak kun


----------------------------------------------------------------------------

localhost:3000 ---> we are developing locally ---> npm run build ro bezani mikhay bebari to internet yani --> build dir dorost mikune va inaro to aws3  upload mikunu

age mikhay inaro ham locally check kuni mituni benvi ---> serve -s build --> to serve it on local host as well

npm run start --> loacl developing ---> any changes will be immediately shown to browser
npm build --->
serve command to test it


dobare npm run start ro bezan ta bargardi be development

taghir bedi build file taghir nemikune balke bayad har bar npm build ro bezani AGAIN

dar packages.json mitoni dependencies age dari be pack haye dg bezari

npm install ro bezan ---> dar package dep haee ke neveshti ro install mikune


package-lock .json exact version use shode dar in app ro neshoon mide ta baghie bebinan ---> yani masala ^13.4.0 in yani had aghal version 13.4 bahse
npm install ro bezani regenerate mikune package-lock.json ro

in pack haro dar source control nakun ---> dar node_modules hame chi oonja nasb hast ---> ino ham mishe generate kar 
pakesh kun va bad npm install bezani hame dobare nasb mishe! ---> vase hamin chun mitone generate beshe dar source control (git ) nemizarimesh

manifest.json ro ham daresh logo haro pak kun

dar .gitignore har chi benvisi ignore mishe 
masalan /build ignore mishe chun generetae mishan rahat
ya masalan /node_modules



manifest.json --> mobile icon --> update bashe in file vase production
robots.txt --> how differnet websracpers should treat this for bots and search engine that is.

------------------------------------------------------------------------------------
everything in react is desinged as a comp
component ---> reusable code to use all over our app
component shabih func hastan --> faghat html return mikunan ---> dar vaghe hamoon jsx barmigardonan ---> fek kun hamoon html hast
jsx dar vaghe syntax extesnion to js hast ---> templatizing h1 using variable  az ghabelyat hash hast
kholase: ---> html+javasript ---> eval to html


avalin component ma Employee hast ke ye folder ijad kardim be esme component va bad dar app.js import kardim va dar return tag esh ro neveshtim

compoent ha functionality ro daran  --> each comp is self sustained  --> comp nesting ham okay hast chun dar comp e App omadim comp e Employee ro neveshtim 
dar app.js mitoni ham jsx (html) benvisi ham logic faghat bayad toye {} bezarish


------------------------------------------------------------------------------------
-props: --> important
how to pass data from parent to child component ---> from App to Employee masalan
kholase ba props --> you can pass specific values for different variables ---> masalan Employee Soheil
age mikhay chandta chiz ro return kuni dar return --> masalan dar return e employee --> az () ghable return use kun 
va deghat kun az <> </> yani fragemment aval va akhar code use kuni yani hmae chi ro bendazi to in chun bayad ye single element return beshe 
semicolon ro ham bardar

deghat kun return age statement badesh to chnadta line bod yani multiple line khati benvisi bayad () bezari vagarna niazi nist

props are not meant to be changed in child copmponet
-------------------------------------------------------------------------------------
state:
vase taghire props dar parent 
import kardim useState ro dar App.js va ba setRole state ijad kardim --> state ijad kardim chun var be UI vasl nist vali state vasle va vorodi input ee ke gereftim ro set kardim be role e Abby 

------------------------------
useState is an example of a hook --> there are other hooks to introduce functionality into our component very easily
hooks alow to use feature without class ---> we prefer to use functions with hooks 



------------------------------
Tailwind Css ro azash mikhaym use kunim --> google search kun : tailwind css installation react

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

and then add the path --> just follow the website ---> ye file tailwind.config.js ijad shode barat ke boro tosh va inaro onja copy kun jaye oon chizi ke hast:

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}




code bala dar content faghat miad kule js file haye toye src ro migire hamin


hala in 3 khat ro copy kun dar App.css ya index.css .ke miad tamame tailwind styling ha ro neshoon mide
chun ma index.css ro pak kardim mizarimesh to App.css

hala npm run start ro kezadi  badesh mituni dar App.js et be in sabk style ezafe kuni:

export default function App() {
  return (
    <h1 className="text-3xl font-bold underline">
      Hello world!
    </h1>
  )
}



kholase:
install - initialize -tell where your js files are - add tailwind directive to your css 


alan masalan bor o dar App.js ye chizi be div e className="App  (inja ezafe mishe)"  ezaf kun

masalan <div className="App bg-red-300">
-----------------------------------
we don't need app component specific styling so change the name of App.css and index.css ---> dar App.js ham import ro dorst kun


---------------------------------
tailwind css omade core css roles ro gerefte va ba class jaygozinesh karde --> dar doc eshon dar search benvis background color ---> ye seri class mibini ke properties ro mitoni be different element vasl kuni --> hala ma khode properties ro nemidim balke class ro midim
ya margin ro search kun bebin ya display
masalan margin-top: 0px;  mishe mt-0
ya flex ro search kun


hala age npm run build ro bezani ina tabdil mishe be code haye css asli shon --> dar main---.css bebin


------------------------------------
use some tailwind examples
dar Employee.js bala ro comment kun va Example 2 benvis
dar docs ---> utility first fundamentals

in code ro dar Employee bezar:

<div class="py-8 px-8 max-w-sm mx-auto bg-white rounded-xl shadow-lg space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6">
  <img class="block mx-auto h-24 rounded-full sm:mx-0 sm:shrink-0" src="/img/erin-lindford.jpg" alt="Woman's Face">
  <div class="text-center space-y-2 sm:text-left">
    <div class="space-y-0.5">
      <p class="text-lg text-black font-semibold">
        Erin Lindford
      </p>
      <p class="text-slate-500 font-medium">
        Product Engineer
      </p>
    </div>
    <button class="px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2">Message</button>
  </div>
</div>



zemnan code bala ye irad dare chun image bayad self closing bashe ke ina yadeshon raft vali to dar enteha bezar: />




mikhaym vaghti employee ha ziad shodan warp beshe o ina ---> pas Employee haro bendaz to div dar App.js va flex kun
so if there is not enough room it makes them change appropiately


injoori:
          <div className='flex flex-wrap'>
            <Employee name="zart" role="intern"></Employee> 
            <Employee name="abby" role={role}/>  
            <Employee name="sam"/>
          </div>


alan age zoom bokuni taghir ro mibini

flex Layout ro search kun dar doc tailwind



be Employee ye m-2 ham ezaf kun ta margin ezafe beshe
auto margin e mx-auto ro ham hazf kun


attribute img ro ba link bezar va bad dar Employee.js ham karhaye lazem ro baraye use kardan az img anjam bede

vase circle kardan aks ha harchand ham ke rectangle img bashan dar Employee dar tag e img inaro ezaf kun:  object-cover rounded-full h-[100px] w-[100px]


-------------------- 
ta lan aks gozashtim

how to work with arrays or list of data (slightly different data)
so use a loop and the data comes from an array
datas are coming from the states but it could easily be substitued out to come from an API --> pas ba inke alan hard code mikunim vali badan ok mishe

step1 --> take all the data and move it to the top in a single var
step2 --> use loop --> use map



az employees.map() use mikunim ---> ye func roye array hast ke ejaze mide roye array iterate kunim



ye warning e mide --> react-jsx-dev-runtime.development.js:87 Warning: Each child in a list should have a unique "key" prop.
react keeps track of all the data on the page va react mifahme ke chiu mikhay update kuni age barash id bezari. id vase identify kardan each element in the array hast 
pas id khoobe ke age update esh kardi majboor nashi kole page ro update kuni pas behtare vase employee dar App.js ye attribute e key bezari
pas masalan key={employee.id}  ro bezar kenare name dar Employee in App.js var dar bala ham vase har karmand ye id bezar masalan 1 va 2 va 3 va ...
vali khoob ye ravesh behtar hast be esme guid --> globally unique identifier
npm install uuid --> universally unique id ke hamon guid hast\

bad ino jaye key bala benvis: key={uuidv4()} 
import ham yadet nare --> import {v4 as uuid4} from 'uuid';


har bar ke benvisi ye id behet mide
console.log(uuidv4());


-------------------------------------------------------------------------------------------
creating modal ---> pop up window ijad ---> edit ---> it won't change the original data until you hit update or complete or what every

don't create it from scratch ---> use react bootstrap --> it gives us component --> one of them is a modal

mishe ino to khode Emplyee.js dorost kard ya comp jadid ijad kuni ke manage kuni bakhshe modal chizha ro kulan

1) create modal from react bootstrap
2) styling and submitting with a button
3) passing props from Employe to modal component that will auto fill the user data into that modal
4) hitting the update button and having that data changed

 
ino dar google search kun --> https://react-bootstrap.github.io/getting-started/introduction/ 




 npm install react-bootstrap bootstrap
 ino ham dar index.js bezar (index.js outer most javascrippt file hast) --->import 'bootstrap/dist/css/bootstrap.min.css';


dar compoent folder EditEmployee.js ro dorost kun

va bad https://react-bootstrap.github.io/components/modal/

az static_backdrop use mikunim ta vaghti kharej click kardim kharej nashe! ---> ghemate render akhare khat ro nagir --> paste kun to EditEmployee


alan age deghat kuni khode in modal ye button misaze vali Employee comp ma ham khodesh ye button dare
hala boro dar Employee.js <EditEmployee /> ro bezar oon vasat